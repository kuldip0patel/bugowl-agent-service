name: test
permissions:
  contents: read

on:
  push:
    branches:
      - main
      - stable
      - 'releases/**'
    tags:
      - '*'
  pull_request:
  workflow_dispatch:
    
jobs:
  find_tests:
    runs-on: ubuntu-latest
    outputs:
      filename_list: ${{ steps.list_test_files.outputs.filename_list }}   # ./tests/ci/test_controller.py, ./tests/ci/test_browser.py, etc.
    steps:
      - uses: actions/checkout@v4
      - id: list_test_files
        run: echo "::set-output name=filename_list::$(ls tests/ci/*.py | jq -R -s -c 'split("\n")[:-1]')"
        # https://code.dblock.org/2021/09/03/generating-task-matrix-by-looping-over-repo-files-with-github-actions.html

  tests:
    name: ${{matrix.test_filename}} 
    runs-on: ubuntu-latest
    env:
      IN_DOCKER: 'True'
    strategy:
      matrix:
        test_filename: ${{ fromJson(needs.find_tests.outputs.filename_list) }}
        # autodiscovers all the files in tests/ci/test_*.py
        # - test_browser
        # - test_controller
        # - test_browser_session
        # - test_tab_management
        # ... and more
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          activate-environment: true

      - run: uv sync

      - name: Detect installed Playwright version
        run: echo "PLAYWRIGHT_VERSION=$(uv pip list --format json | jq -r '.[] | select(.name == "playwright") | .version')" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - run: playwright install chrome
      - run: playwright install chromium

      - run: pytest tests/ci/${{ matrix.test_filename }}.py
