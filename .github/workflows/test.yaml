name: test

on:
  push:
    branches:
      - main
      - stable
      - 'releases/**'
    tags:
      - '*'
  pull_request:
  workflow_dispatch:
    
jobs:
  find_tests:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: echo "::set-output name=matrix::$(ls tests/ci/*.py | jq -R -s -c 'split("\n")[:-1]')"
        # https://code.dblock.org/2021/09/03/generating-task-matrix-by-looping-over-repo-files-with-github-actions.html

  tests:
    name: ${{matrix.test}} 
    runs-on: ubuntu-latest
    env:
      IN_DOCKER: 'True'
    strategy:
      matrix:
        test: ${{ fromJson(needs.find_tests.outputs.matrix) }}
        # should be working in matrix ^
        # - test_browser
        # - test_controller
        # - test_browser_session
        # - test_tab_management
        # - test_sensitive_data
        # - test_url_allowlist_security
        # TODO:
        # - browser/patchright
        # - browser/playwright
        # - browser/user_binary
        # - browser/remote_cdp
        # - models/openai
        # - models/google
        # - models/anthropic
        # - models/azure
        # - models/deepseek
        # - models/grok
        # - functionality/click
        # - functionality/tabs
        # - functionality/input
        # - functionality/scroll
        # - functionality/upload
        # - functionality/download
        # - functionality/save
        # - functionality/vision
        # - functionality/memory
        # - functionality/planner
        # - functionality/hooks
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          activate-environment: true

      - run: uv sync

      - name: Detect installed Playwright or Patchright version
        run: echo "PLAYWRIGHT_VERSION=$(uv pip list --format json | jq -r '.[] | select(.name == "playwright") | .version')" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - run: playwright install chrome
      - run: playwright install chromium

      - run: pytest tests/${{ matrix.test }}.py
